name: PR Checks

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  # Check PR title and description
  pr-validation:
    name: PR Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Check PR title
      uses: amannn/action-semantic-pull-request@v5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        types: |
          feat
          fix
          docs
          style
          refactor
          perf
          test
          build
          ci
          chore
          revert
    
    - name: Check PR size
      uses: codelytv/pr-size-labeler@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        xs_label: 'size/xs'
        xs_max_size: '10'
        s_label: 'size/s'
        s_max_size: '100'
        m_label: 'size/m'
        m_max_size: '500'
        l_label: 'size/l'
        l_max_size: '1000'
        xl_label: 'size/xl'

  # Auto-assign reviewers
  auto-assign:
    name: Auto Assign
    runs-on: ubuntu-latest
    
    steps:
    - name: Auto-assign PR
      uses: kentaro-m/auto-assign-action@v1.2.4
      with:
        configuration-path: '.github/auto-assign.yml'

  # Check for merge conflicts
  conflict-check:
    name: Conflict Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Check for conflicts
      uses: eps1lon/actions-label-merge-conflict@v2
      with:
        dirtyLabel: 'has-conflicts'
        repoToken: ${{ secrets.GITHUB_TOKEN }}

  # Run quick checks
  quick-checks:
    name: Quick Checks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Check for console.log
      run: |
        if grep -r "console.log" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" src/; then
          echo "::warning::Found console.log statements in source code"
        fi
    
    - name: Check for TODO comments
      run: |
        if grep -r "TODO\|FIXME\|HACK" --include="*.ts" --include="*.tsx" --include="*.js" --include="*.jsx" --include="*.py" .; then
          echo "::warning::Found TODO/FIXME/HACK comments"
        fi
    
    - name: Check file sizes
      run: |
        find . -type f -size +1M | while read file; do
          echo "::warning::Large file detected: $file ($(du -h "$file" | cut -f1))"
        done